class UsersController < ApplicationController

  before_action :sign_somebody_in,             only: [:update, :destroy]
  before_action :verify_user_now_signed_in,    only: [:update, :destroy]
  #before_action :redirect_away_nonadmin_users, only: :destroy
  before_action :sign_out_current_user,        only: [ :new, :create ]



  def index
    @users = User.order(status_id: :asc).order(lastname: :asc).paginate(page: params[:page], per_page: 10) # params[:page] - parameter generated by will_paginate on view
  end


  def new
    @user = User.new
  end


  def create
    @user = User.new(user_params)
    if @user.save
      flash_message = "Ďakujeme za vytvorenie profilu. Tento profil bude aktivovaný v priebehu niekoľkých hodín. Tu je zoznam našich stretnutí."
      
      nr_of_delivery_errors = 0
      admins = User.admins.pluck(:email)

      admins.each do |a|
        begin
          NotificationMailer.notify_new_profile(a, @user).deliver
        rescue
          nr_of_delivery_errors += 1
        end
      end

      flash_message += " Niektoré notifikačné emaily sa nepodarilo odoslať." if nr_of_delivery_errors > 0


      flash[:success] = flash_message
      redirect_to matches_path

    else
      render 'new'
    end
  end


  def show
    @user = User.find(params[:id])
    
    @next_matches = @user.matches.where('date_of_play >= (?)', Date.current()).order(date_of_play: :desc)
    @past_matches = @user.matches.where('date_of_play < (?)', Date.current()).order(date_of_play: :desc).paginate(page: params[:page], per_page: 5)
  end


  def edit
    # Next line no more needed, commented out, due to @user variable is defined in
    # verify_user_now_signed_in method called right before edit action is fired (see before_action on the top)
    @user = User.find(params[:id])
    @statuses = Status.all
  end


  def update
    # Next line no more needed, commented out, due to @user variable is defined in
    # verify_user_now_signed_in method called right before edit action is fired (see before_action on the top)
    #@user = User.find(params[:id])

    if @user.update_attributes(user_params)
      flash_message = "Profil bol upravený."
      
      begin
        NotificationMailer.notify_profile_changed(@user).deliver
      rescue
        flash_message += " Notifikačný email sa nepodarilo odoslať."
      end

      flash[:success] = flash_message
      redirect_to @user
    else
      render 'edit'
    end
  end


  def destroy
    user = User.find(params[:id])
    user_fullname = user.fullname
    user_email = user.email
    
    user.destroy
    flash_message = "Profil bol vymazaný."
    
    begin
      NotificationMailer.notify_profile_deleted(user_fullname, user_email).deliver
    rescue
      flash_message += " Notifikačný email sa nepodarilo odoslať."
    end

    flash[:success] = flash_message
    redirect_to users_url
  end


  private

    def user_params
      params.require(:user).permit(
        :status_id,
        :firstname,
        :lastname,
        :name_suffix,
        :email,
        :phone_nr,
        :year_of_birth,
        :plays_since,
        :residence,
        :password,
        :password_confirmation
      )
    end




    # Before filters

    # Redirects to root unless user with id specified in request's params is the one 
    # currently signed in.
    def verify_user_now_signed_in
      @user = User.find(params[:id])
      redirect_to(root_url) unless current_user?(@user) || current_user.admin?
    end


    # Redirects to root unless user currently logged in is an admin user.
=begin
    def redirect_away_nonadmin_users
      redirect_to(root_url) unless current_user.admin?
    end
=end


    def sign_out_current_user
      sign_out
    end



  
end
